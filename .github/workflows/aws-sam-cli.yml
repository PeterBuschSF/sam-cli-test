name: aws-sam-cli

on:
  workflow_dispatch:
  push:

jobs:
  aws-sam-test:
    name: Test AWS SAM CLI from Github's ubuntu-latest
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - run: sam init --no-interactive --name sam-app --runtime python3.9 --dependency-manager pip --app-template hello-world
      - run: cd sam-app && sam build --use-container --debug
      - run: cd sam-app && sam local invoke "HelloWorldFunction" -e events/event.json
      - run: cd sam-app && sam local generate-event apigateway aws-proxy --body "" --path "hello" --method GET

  aws-sam-dind:
    name: Test AWS SAM CLI from ubuntu using Docker in Docker
    runs-on: ubuntu-latest
    steps:
      - name: Current Versions
        run: |
          docker --version

      - name: Docker-In-Docker Setup
        run: |
          docker pull -q ubuntu
          docker pull -q docker:dind
          docker network create some-network
          docker volume create some-docker-certs-ca
          docker volume create some-docker-certs-client 
      
      - name: Run Docker-In-Docker Container
        run: |
          docker run --privileged --name docker-dind -d \
            --network some-network --network-alias docker \
            -e DOCKER_TLS_CERTDIR=/certs \
            -v some-docker-certs-ca:/certs/ca \
            -v some-docker-certs-client:/certs/client \
            docker:dind
          sleep 10
          docker logs --tail=3 docker-dind

      - name: Run runner-base Container
        run: |
          docker run --name runner-base -d -t \
            --network some-network --network-alias runner-base \
            -e DOCKER_TLS_CERTDIR=/certs \
            -e DOCKER_CERT_PATH=/certs/client \
            -e DOCKER_HOST=tcp://docker:2376 \
            -e DOCKER_TLS_VERIFY=1 \
            -v some-docker-certs-client:/certs/client:ro \
            ubuntu
          
      - name: Install Packages
        run: |
          docker exec runner-base sh -c "
            apt-get update --quiet ;\
            apt-get -y install --no-install-recommends \
              ca-certificates \
              curl \
              unzip \
              git ;\
            update-ca-certificates ;\
          "

      - name: Install Docker
        run: |
          docker exec runner-base sh -c "
            curl -X GET -fSL https://download.docker.com/linux/static/stable/x86_64/docker-20.10.22.tgz -o /tmp/docker.tgz ;\ 
            tar -x --strip-components 1 --directory /usr/local/bin/ -f /tmp/docker.tgz ;\
          "

      - run: docker ps -a
      - run: docker exec runner-base /usr/bin/env
      - run: docker exec runner-base docker version
      - run: docker exec runner-base docker context list

      - name: Install AWS CLI
        run: |
          docker exec runner-base sh -c "\
            curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip ;\
            unzip -q awscliv2.zip -d . ;\
            ./aws/install ;\
            aws --version ;\
          "

      - name: Install SAM CLI
        run: |
          docker exec runner-base sh -c "\
            curl -fSL https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip -o samcli.zip ;\
            unzip -q samcli.zip -d sam-installation ;\
            sam-installation/install ;\
            sam --version ;\
          "

      - name: sam init
        run: docker exec runner-base sh -c \
          "sam init --no-interactive --name sam-app --runtime python3.9 --dependency-manager pip --app-template hello-world"

      - name: sam build --use-container
        run: docker exec runner-base sh -c \
          "cd sam-app && sam build --use-container --debug"

      - name: sam local invoke
        run: docker exec runner-base sh -c \
          "cd sam-app && sam local invoke HelloWorldFunction -e events/event.json"

      - name: sam local generate-event
        run: docker exec runner-base sh -c \
          'cd sam-app && sam local generate-event apigateway aws-proxy --body "" --path "hello" --method GET'
