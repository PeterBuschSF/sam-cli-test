name: mockserver

on:
  workflow_dispatch:
  push:

jobs:
  mockserver-test:
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: check versions
        run: |
          docker --version
          docker-compose --version

      - name: test running and connecting to mockserver
        run: |
          docker pull -q mockserver/mockserver
          docker pull -q alpine
          cd mockserver
          docker-compose up -d 
          curl --retry 10 --retry-all-errors --retry-delay 5 -X PUT http://localhost:1080/mockserver/status
          curl -X GET http://localhost:1080/hello
          docker run --name alpine --network test -t -d alpine
          docker exec alpine apk add curl
          docker exec alpine curl -X GET http://mockserver:1080/hello
      
      - name: mockserver logs
        if: ${{ always() }}
        run: docker logs mockserver

  mockserver-dind:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: check versions
        run: |
          docker --version
          docker-compose --version

      - name: dind setup
        run: |
          docker pull -q docker
          docker pull -q docker:dind
          
          mkdir docker-certs-ca
          mkdir docker-certs-client

          echo 'networks and volumes'
          docker network create some-network
          docker volume create some-docker-certs-ca
          docker volume create some-docker-certs-client 

          docker run --privileged --name docker-dind -d \
            --network some-network --network-alias docker \
            -e DOCKER_TLS_CERTDIR=/certs \
            -v some-docker-certs-ca:/certs/ca \
            -v some-docker-certs-client:/certs/client \
            docker:dind
          
          sleep 10
          
          docker logs --tail=3 docker-dind

      - name: create docker-base
        run: |
          echo 'docker-base'
          docker run --name docker-base -d -t \
            --network some-network --network-alias docker-base \
            -e DOCKER_TLS_CERTDIR=/certs \
            -v some-docker-certs-client:/certs/client:ro \
            -v ${GITHUB_WORKSPACE}/mockserver:/mockserver \
            docker

          docker ps -a

          docker exec docker-base apk add curl

      - name: start mockserver in dind
        run: |
          docker exec docker-base docker-entrypoint.sh sh -c "\
            docker pull -q mockserver/mockserver ;\
            cd /mockserver ;\
            docker-compose up -d ;\
            curl -o - -s -w "%{http_code}\n" --retry 10 --retry-all-errors --retry-delay 5 -X PUT http://docker:1080/mockserver/status ;\
            echo 'Call Mockserver' ;\
            curl -o - -s -w "%{http_code}\n" -X GET http://docker:1080/hello ;\
          "

      - name: Call Mockserver from another container 
        run: |
          docker exec docker-base docker-entrypoint.sh sh -c "\
            docker pull -q alpine ;\
            docker run --name alpine --network test -t -d alpine ;\
            docker exec alpine apk add curl ;\
            docker exec alpine curl -o - -s -w "%{http_code}\n" -X GET http://mockserver:1080/hello ;\
          "

      - name: docker-dind logs
        if: ${{ always() }}
        run: docker logs docker-dind

      - name: docker-base logs
        if: ${{ always() }}
        run: docker logs docker-base
      
      - name: mockserver logs
        if: ${{ always() }}
        run: docker exec docker-base docker-entrypoint.sh sh -c "docker logs mockserver"
      
      - name: alpine logs
        if: ${{ always() }}
        run: docker exec docker-base docker-entrypoint.sh sh -c "docker logs alpine"
