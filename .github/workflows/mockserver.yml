name: mockserver

on:
  workflow_dispatch:

jobs:
  mockserver-test:
    name: Test Docker on Github's ubuntu-latest using Mockserver
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Current Versions
        run: |
          docker --version
          docker pull -q mockserver/mockserver
          docker pull -q alpine

      - name: mockserver setup
        run: |
          docker network create test
          docker run -dt -p 1080:1080 --network test --network-alias mockserver --name mockserver mockserver/mockserver
          curl --retry 10 --retry-all-errors --retry-delay 5 -X PUT http://localhost:1080/mockserver/status
          curl -d '{"httpRequest":{"path":"/hello"},"httpResponse":{"body":"hello user"}}' \
            -X PUT http://localhost:1080/mockserver/expectation

      - name: Test Mockserver call
        run: curl -X GET http://localhost:1080/hello

      - name: Call Mockserver from another container
        run: |
          docker run --name alpine --network test -dt alpine
          docker exec alpine apk add curl
          docker exec alpine curl -o - -s -w "%{http_code}\n" -X GET http://mockserver:1080/hello
      
      - name: mockserver logs
        if: ${{ always() }}
        run: docker logs mockserver

      - name: alpine logs
        if: ${{ always() }}
        run: docker logs alpine

  mockserver-dind:
    name: Test Docker in Docker on base Docker images using Mockserver
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Current Versions
        run: |
          docker --version

      - name: Docker IN Docker Setup
        run: |
          docker pull -q docker
          docker pull -q docker:dind
          docker network create some-network
          docker volume create some-docker-certs-ca
          docker volume create some-docker-certs-client 
      
      - name: Run dind
        run: |
          docker run --privileged --name docker-dind -d \
            --network some-network --network-alias docker \
            -e DOCKER_TLS_CERTDIR=/certs \
            -v some-docker-certs-ca:/certs/ca \
            -v some-docker-certs-client:/certs/client \
            docker:dind
          sleep 10
          docker logs --tail=3 docker-dind

      - name: Run docker-base
        run: |
          docker run --name docker-base -d -t \
            --network some-network --network-alias docker-base \
            -e DOCKER_TLS_CERTDIR=/certs \
            -v some-docker-certs-client:/certs/client:ro \
            -v ${GITHUB_WORKSPACE}/mockserver:/mockserver \
            docker
          docker exec docker-base apk add curl
      
      - run: docker ps -a
      - run: docker exec docker-base docker-entrypoint.sh sh -c "/usr/bin/env"
      - run: docker exec docker-base docker-entrypoint.sh sh -c "docker version"
      - run: docker exec docker-base docker-entrypoint.sh sh -c "docker context list"

      - name: start mockserver in dind server
        run: |
          docker exec docker-base docker-entrypoint.sh sh -c "\
            docker pull -q mockserver/mockserver ;\
            docker network create test
            docker run -dt -p 1080:1080 --network test --network-alias mockserver --name mockserver mockserver/mockserver
            curl -o - -s -w "%{http_code}\n" --retry 10 --retry-all-errors --retry-delay 5 -X PUT http://docker:1080/mockserver/status ;\
          "
      - name: set mockserver expectation
        run: |
          docker exec docker-base curl -d '{"httpRequest":{"path":"/hello"},"httpResponse":{"body":"hello user"}}' \
            -X PUT http://docker:1080/mockserver/expectation
      
      - name: Test Mockserver call from docker-base
        run: |
          docker exec docker-base curl -o - -s -w "%{http_code}\n" -X GET http://docker:1080/hello

      - name: Call Mockserver from another container 
        run: |
          docker exec docker-base docker-entrypoint.sh sh -c "\
            docker pull -q alpine ;\
            docker run --name alpine --network test -t -d alpine ;\
            docker exec alpine apk add curl ;\
            docker exec alpine curl -o - -s -w "%{http_code}\n" -X GET http://mockserver:1080/hello ;\
          "

      - name: docker-dind logs
        if: ${{ always() }}
        run: docker logs docker-dind

      - name: docker-base logs
        if: ${{ always() }}
        run: docker logs docker-base
      
      - name: mockserver logs
        if: ${{ always() }}
        run: docker exec docker-base docker-entrypoint.sh sh -c "docker logs mockserver"
      
      - name: alpine logs
        if: ${{ always() }}
        run: docker exec docker-base docker-entrypoint.sh sh -c "docker logs alpine"
